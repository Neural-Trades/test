const pendingPayments = {};

function getMembershipInfo(membershipStartDate, trialStartDate) {
    const now = new Date();
    const lifetimeAccessDate = new Date("1988-10-01"); // ðŸ“Œ Data para acesso vitalÃ­cio

    // ðŸ“Œ Se a data do membership for 01-10-1988, retorna acesso vitalÃ­cio
    if (membershipStartDate && new Date(membershipStartDate).getTime() === lifetimeAccessDate.getTime()) {
        return { isActive: true, isLifetime: true };
    }

    // ðŸ“Œ Se o usuÃ¡rio tem uma membership ativa (menos de 31 dias desde a ativaÃ§Ã£o)
    if (membershipStartDate) {
        const startDate = new Date(membershipStartDate);
        const diffDays = (now - startDate) / (1000 * 60 * 60 * 24);
        const roundedDaysRemaining = Math.round(31 - diffDays); // âœ… Agora arredondando corretamente!
        if (roundedDaysRemaining > 0) {
            return { isActive: true, isLifetime: false, daysRemaining: roundedDaysRemaining };
        }
    }

    // ðŸ“Œ Se ainda estÃ¡ no perÃ­odo de Free Trial (5 dias)
    if (trialStartDate) {
        const startDate = new Date(trialStartDate);
        const diffDays = (now - startDate) / (1000 * 60 * 60 * 24);
        const roundedDaysRemaining = Math.round(5 - diffDays); // âœ… Agora arredondando corretamente!
        if (roundedDaysRemaining > 0) {
            return { isActive: true, isLifetime: false, isTrial: true, daysRemaining: roundedDaysRemaining };
        }
    }

    // ðŸ“Œ Caso contrÃ¡rio, membership expirou
    return { isActive: false, isLifetime: false, daysRemaining: 0 };
}



module.exports = { getMembershipInfo, pendingPayments };

